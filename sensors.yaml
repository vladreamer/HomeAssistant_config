################
## WeatherSensor 
################
- platform: yr
  name: Weather
  forecast: 24
  monitored_conditions:
  - temperature
  - precipitation
  - windSpeed
  - pressure
  - humidity
  - dewpointTemperature

################
## SystemStatus 
################
- platform: systemmonitor
  name: RasbPI
  resources:
  - type: disk_use_percent
    arg: /
  - type: since_last_boot

###############
##Date and Time
###############
- platform: time_date
  name: Time and Data
  display_options:
  - 'date'
  - 'date_time'
  - 'time'
  - 'time_date'
  - 'time_utc'

- platform: worldclock
  name: Time in Odessa
  time_zone: Europe/Kiev

##########################
## MultiSensors Batteries
##########################
- platform: template
  sensors:
    multi01_battery:
      friendly_name: "Multisensor1_Battery"
      value_template: "{% if states.zwave.vision_zp3111_multisensor_4in1_1 %}
        {{ states.zwave.vision_zp3111_multisensor_4in1_1.attributes.battery_level }}
        {% else %}
        unknown
        {% endif %}"
      unit_of_measurement: '%'
      # entity_id: zwave.zwave.vision_zp3111_multisensor_4in1_1
      icon_template: >-
        {% set battery_level = states('sensor.multi01_battery')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
        mdi:battery-unknown
        {% else %}
        {% if battery_round >= 100 %}
        mdi:battery
        {% elif battery_round > 0 %}
        mdi:battery-{{ battery_round }}
        {% else %}
        mdi:battery-alert
        {% endif %}
        {% endif %}

    multi02_battery:
      friendly_name: "Multisensor2_Battery"
      value_template: "{% if states.zwave.vision_zp3111_multisensor_4in1_2 %}
        {{ states.zwave.vision_zp3111_multisensor_4in1_2.attributes.battery_level }}
        {% else %}
        unknown
        {% endif %}"
      unit_of_measurement: '%'
      # entity_id: zwave.multi02
      icon_template: >-
        {% set battery_level = states('sensor.multi02_battery')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
        mdi:battery-unknown
        {% else %}
        {% if battery_round >= 100 %}
        mdi:battery
        {% elif battery_round > 0 %}
        mdi:battery-{{ battery_round }}
        {% else %}
        mdi:battery-alert
        {% endif %}
        {% endif %} 

    multi03_battery:
      friendly_name: "Multisensor3_Battery"
      value_template: "{% if states.zwave.vision_zp3111_multisensor_4in1_3 %}
        {{ states.zwave.vision_zp3111_multisensor_4in1_3.attributes.battery_level }}
        {% else %}
        unknown
        {% endif %}"
      unit_of_measurement: '%'
      # entity_id: zwave.multi03
      icon_template: >-
        {% set battery_level = states('sensor.multi03_battery')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
        mdi:battery-unknown
        {% else %}
        {% if battery_round >= 100 %}
        mdi:battery
        {% elif battery_round > 0 %}
        mdi:battery-{{ battery_round }}
        {% else %}
        mdi:battery-alert
        {% endif %}
        {% endif %} 

    multi04_battery:
      friendly_name: "Multisensor4_Battery"
      value_template: "{% if states.zwave.vision_zp3111_multisensor_4in1_4 %}
        {{ states.zwave.vision_zp3111_multisensor_4in1_4.attributes.battery_level }}
        {% else %}
        unknown
        {% endif %}"
      unit_of_measurement: '%'
      # entity_id: zwave.multi04
      icon_template: >-
        {% set battery_level = states('sensor.multi04_battery')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
        mdi:battery-unknown
        {% else %}
        {% if battery_round >= 100 %}
        mdi:battery
        {% elif battery_round > 0 %}
        mdi:battery-{{ battery_round }}
        {% else %}
        mdi:battery-alert
        {% endif %}
        {% endif %} 

#############################################
## WaterLeak01 Battery and Status  Node_Id:3
#############################################
    waterleaksensor01_battery:
      friendly_name: "Waterleak01_Battery"
      value_template: "{% if states.zwave.neo_coolcam_water_leakage_detector01 %}
        {{ states.zwave.neo_coolcam_water_leakage_detector01.attributes.battery_level }}
        {% else %}
        unknown
        {% endif %}"
      unit_of_measurement: '%' 
      # entity_id: zwave.neo_coolcam_water_leakage_detector01
      icon_template: >-
        {% set battery_level = states('sensor.waterleaksensor01_battery')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
        mdi:battery-unknown
        {% else %}
        {% if battery_round >= 100 %}
        mdi:battery
        {% elif battery_round > 0 %}
        mdi:battery-{{ battery_round }}
        {% else %}
        mdi:battery-alert
        {% endif %}
        {% endif %}
#
        
    waterleakstatus01:
      friendly_name: "Basement"
      value_template: "{{ states('binary_sensor.neo_coolcam_water_leakage_detector_sensor01') }}"
      icon_template: >-
       {% if is_state('binary_sensor.neo_coolcam_water_leakage_detector_sensor01', 'on') %}
         mdi:water
       {% else %}
         mdi:water-off
       {% endif %}

#############################################
## WaterLeak02 Battery and Status  Node_Id:26
#############################################
    waterleaksensor02_battery:
      friendly_name: "Waterleak02_Battery"
      value_template: "{% if states.zwave.neo_coolcam_water_leakage_detector02 %}
        {{ states.zwave.neo_coolcam_water_leakage_detector02.attributes.battery_level }}
        {% else %}
        unknown
        {% endif %}"
      unit_of_measurement: '%' 
      # entity_id: zwave.neo_coolcam_water_leakage_detector02
      icon_template: >-
        {% set battery_level = states('sensor.waterleaksensor02_battery')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
        mdi:battery-unknown
        {% else %}
        {% if battery_round >= 100 %}
        mdi:battery
        {% elif battery_round > 0 %}
        mdi:battery-{{ battery_round }}
        {% else %}
        mdi:battery-alert
        {% endif %}
        {% endif %}
#
        
    waterleakstatus02:
      friendly_name: "Kitchen"
      value_template: "{{ states('binary_sensor.neo_coolcam_water_leakage_detector_sensor02') }}"
      icon_template: >-
       {% if is_state('binary_sensor.neo_coolcam_water_leakage_detector_sensor02', 'on') %}
         mdi:water
       {% else %}
         mdi:water-off
       {% endif %}

#############################################
## WaterLeak03 Battery and Status  Node_Id:27
#############################################
    waterleaksensor03_battery:
      friendly_name: "Waterleak03_Battery"
      value_template: "{% if states.zwave.neo_coolcam_water_leakage_detector03 %}
        {{ states.zwave.neo_coolcam_water_leakage_detector03.attributes.battery_level }}
        {% else %}
        unknown
        {% endif %}"
      unit_of_measurement: '%' 
      # entity_id: zwave.neo_coolcam_water_leakage_detector03
      icon_template: >-
        {% set battery_level = states('sensor.waterleaksensor03_battery')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
        mdi:battery-unknown
        {% else %}
        {% if battery_round >= 100 %}
        mdi:battery
        {% elif battery_round > 0 %}
        mdi:battery-{{ battery_round }}
        {% else %}
        mdi:battery-alert
        {% endif %}
        {% endif %}
#
        
    waterleakstatus03:
      friendly_name: "Laundry"
      value_template: "{{ states('binary_sensor.neo_coolcam_water_leakage_detector_sensor03') }}"
      icon_template: >-
       {% if is_state('binary_sensor.neo_coolcam_water_leakage_detector_sensor03', 'on') %}
         mdi:water
       {% else %}
         mdi:water-off
       {% endif %}
       
       
#############################################
## Thermostat  Node_Id:28
#############################################
- platform: template
  sensors:
    thermostat_battery:
      friendly_name: "Thermostat Battery"
      unit_of_measurement: "%"
      value_template: >-
        {%- if states.zwave['2gig_technologies_ct101_thermostat_iris'].attributes.battery_level %}
            {{ states.zwave['2gig_technologies_ct101_thermostat_iris'].attributes.battery_level }}
        {% else %}
            Unknown
        {%- endif %}
      icon_template: >-
        {% set battery_level = states('sensor.thermostat_battery')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
        mdi:battery-unknown
        {% else %}
        {% if battery_round >= 100 %}
        mdi:battery
        {% elif battery_round > 0 %}
        mdi:battery-{{ battery_round }}
        {% else %}
        mdi:battery-alert
        {% endif %}
        {% endif %}
#
    thermostat_cool_fan_state:
      friendly_name: "Thermostat Cool Fan State"
      value_template: >-
        {%- if states.climate['2gig_technologies_ct101_thermostat_iris_cooling_1'].attributes.fan_state %}
            {{ states.climate['2gig_technologies_ct101_thermostat_iris_cooling_1'].attributes.fan_state }}
        {% else %}
            Unknown
        {%- endif %}
    thermostat_heat_fan_state:
      friendly_name: "Thermostat Heat Fan State"
      value_template: >-
        {%- if states.climate['2gig_technologies_ct101_thermostat_iris_heating_1'].attributes.fan_state %}
            {{ states.climate['2gig_technologies_ct101_thermostat_iris_heating_1'].attributes.fan_state }}
        {% else %}
            Unknown
        {%- endif %}
#
    thermostat_cool_operation_mode_state:
      friendly_name: "Thermostat Cool State"
      value_template: >-
        {%- if states.climate['2gig_technologies_ct101_thermostat_iris_cooling_1'].attributes.operating_state %}
            {{ states.climate['2gig_technologies_ct101_thermostat_iris_cooling_1'].attributes.operating_state }}
        {% else %}
            Unknown
        {%- endif %}
      icon_template: >-
        mdi:snowflake  
    thermostat_heat_operation_mode_state:
      friendly_name: "Thermostat Heat State"
      value_template: >-
        {%- if states.climate['2gig_technologies_ct101_thermostat_iris_heating_1'].attributes.operating_state %}
            {{ states.climate['2gig_technologies_ct101_thermostat_iris_heating_1'].attributes.operating_state }}
        {% else %}
            Unknown
        {%- endif %}
      icon_template: >-
        mdi:fire 
#
    thermostat_cool_current_temperature:
      friendly_name: "Thermostat Cool Current Temperature"
      value_template: >-
        {%- if states.climate['2gig_technologies_ct101_thermostat_iris_cooling_1'].attributes.current_temperature %}
            {{ states.climate['2gig_technologies_ct101_thermostat_iris_cooling_1'].attributes.current_temperature }}
        {% else %}
            Unknown
        {%- endif %}
      icon_template: >-
        mdi:thermometer
#        
    thermostat_heat_current_temperature:
      friendly_name: "Thermostat Heat Current Temperature"
      value_template: >-
        {%- if states.climate['2gig_technologies_ct101_thermostat_iris_heating_1'].attributes.current_temperature %}
            {{ states.climate['2gig_technologies_ct101_thermostat_iris_heating_1'].attributes.current_temperature }}
        {% else %}
            Unknown
        {%- endif %}
      icon_template: >-
        mdi:thermometer 
#
    thermostat_cool_temperature:
      friendly_name: "Thermostat Cool Temperature"
      value_template: >-
        {%- if states.climate['2gig_technologies_ct101_thermostat_iris_cooling_1'].attributes.temperature %}
            {{ states.climate['2gig_technologies_ct101_thermostat_iris_cooling_1'].attributes.temperature }}
        {% else %}
            Unknown
        {%- endif %}
      icon_template: >-
        mdi:thermometer-lines
# 
    thermostat_heat_temperature:
      friendly_name: "Thermostat Heat Temperature"
      value_template: >-
        {%- if states.climate['2gig_technologies_ct101_thermostat_iris_heating_1'].attributes.temperature %}
            {{ states.climate['2gig_technologies_ct101_thermostat_iris_heating_1'].attributes.temperature }}
        {% else %}
            Unknown
        {%- endif %}
      icon_template: >-
        mdi:thermometer-lines 
#
    thermostat_cool_min_temp:
      friendly_name: "Thermostat Cool Minimum Temperature"
      value_template: >-
        {%- if states.climate['2gig_technologies_ct101_thermostat_iris_cooling_1'].attributes.min_temp %}
            {{ states.climate['2gig_technologies_ct101_thermostat_iris_cooling_1'].attributes.min_temp }}
        {% else %}
            Unknown
        {%- endif %}
      icon_template: >-
        mdi:thermometer-lines 
#
    thermostat_heat_min_temp:
      friendly_name: "Thermostat Heat Minimum Temperature"
      value_template: >-
        {%- if states.climate['2gig_technologies_ct101_thermostat_iris_heating_1'].attributes.min_temp %}
            {{ states.climate['2gig_technologies_ct101_thermostat_iris_heating_1'].attributes.min_temp }}
        {% else %}
            Unknown
        {%- endif %}
      icon_template: >-
        mdi:thermometer-lines 
#
    thermostat_cool_max_temp:
      friendly_name: "Thermostat Cool Maximum Temperature"
      value_template: >-
        {%- if states.climate['2gig_technologies_ct101_thermostat_iris_cooling_1'].attributes.max_temp %}
            {{ states.climate['2gig_technologies_ct101_thermostat_iris_cooling_1'].attributes.max_temp }}
        {% else %}
            Unknown
        {%- endif %}
      icon_template: >-
        mdi:thermometer-lines 
##
    thermostat_heat_max_temp:
      friendly_name: "Thermostat Heat Maximum Temperature"
      value_template: >-
        {%- if states.climate['2gig_technologies_ct101_thermostat_iris_heating_1'].attributes.max_temp %}
            {{ states.climate['2gig_technologies_ct101_thermostat_iris_heating_1'].attributes.max_temp }}
        {% else %}
            Unknown
        {%- endif %}
      icon_template: >-
        mdi:thermometer-lines 
#
